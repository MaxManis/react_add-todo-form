{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","userId","App","useState","todosFromServer","usersFromServer","find","setTodos","titleInput","setTitleInput","userInput","setUserInput","userSelectError","setUserSelectError","titleSelectError","setTitleSelectError","getNewIdForTodo","biggest","forEach","action","method","onSubmit","event","preventDefault","type","value","onChange","clearTitle","target","replace","placeholder","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edff1db5.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (user\n    ? (\n      <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n        {user.name}\n      </a>\n    ) : (\n      <span className=\"UserInfo\">\n        Unknown user\n      </span>\n    ));\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo\n        user={user}\n      />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n//\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n//\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction usersIntoTodos() {\n  return todosFromServer.map(todo => {\n    return {\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    };\n  });\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(usersIntoTodos());\n  const [titleInput, setTitleInput] = useState('');\n  const [userInput, setUserInput] = useState(0);\n  const [userSelectError, setUserSelectError] = useState(false);\n  const [titleSelectError, setTitleSelectError] = useState(false);\n\n  function verify() {\n    if (!userInput || !titleInput) {\n      if (!userInput) {\n        setUserSelectError(true);\n      }\n\n      if (!titleInput) {\n        setTitleSelectError(true);\n      }\n    }\n\n    return userInput && titleInput;\n  }\n\n  function resetInputs() {\n    setUserInput(0);\n    setTitleInput('');\n  }\n\n  function getNewIdForTodo() {\n    let biggest = 0;\n\n    todos.forEach(todo => {\n      if (todo.id > biggest) {\n        biggest = todo.id;\n      }\n    });\n\n    return biggest + 1;\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (!verify()) {\n            return;\n          }\n\n          setTodos(\n            [\n              ...todos,\n              {\n                id: getNewIdForTodo(),\n                title: titleInput,\n                completed: false,\n                userId: userInput,\n                user: usersFromServer.find(user => user.id === userInput),\n              },\n            ],\n          );\n\n          resetInputs();\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            onChange={(event) => {\n              const clearTitle = event.target.value\n                .replace(/[^a-zа-я\\s\\d]/gi, '');\n\n              setTitleInput(clearTitle);\n              setTitleSelectError(false);\n            }}\n            placeholder=\"Enter a title\"\n          />\n\n          {titleSelectError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={userInput}\n            data-cy=\"userSelect\"\n            onChange={(event) => {\n              setUserInput(+event.currentTarget.value);\n              setUserSelectError(false);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => {\n              return (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {userSelectError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n//\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}